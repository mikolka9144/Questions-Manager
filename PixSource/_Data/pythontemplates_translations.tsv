		PL	EN	RU
print	print('halo')\r\nprint(3+4)	wypisuje zadane słowo	writes the given word	пишет данное слово
int	a='3'\r\nprint(int(a)*int(a))	zmienia typ słowny na typ liczbowy	changes the word type to a numeric type	изменяет словесный тип на числовой тип
float	a='3'\r\nb=5\r\nprint(float(a)*float(b))	zmienia typ słowny lub int na typ liczby zmiennoprzecinkowej	changes the verbal or int type to a floating-point number type	изменяет вербальный тип или тип int на тип чисел с плавающей запятой
str	a=3\r\nprint('hello '+str(a))	zmienia typ liczbowy na typ słowny	changes the numeric type to word type	изменяет тип числа на словесный тип
for	for i in range(10):\r\nprint(i)\r\na=['one','two','three']\r\nfor i in a:\r\n\tprint(i)\r\nfor i in range(-30,10,3):\r\n\tprint(i)	pętla iterująca po zadanym ciągu	a loop that iterates over a given string	цикл, который повторяется над заданной строкой
while	i = 1\r\nwhile i < 10:\r\n\t print(i)\r\n\t i+=1	pętla iterująca blok instrukcji dopóki nie zajdzie dany warunek	a loop that iterates the instruction block until the condition occurs	цикл, который повторяет блок инструкций до тех пор, пока не возникнет условие
if	a=['one','two','three','four','five']\r\nfor i in a:\r\n\tif 'f' in i:\r\n\t\tprint(i+' contains F')\r\n\t	sprawdza warunek	checks the condition	проверяет состояние
else	for i in range(10):\r\n\tif i%2==0:\r\n\t\tprint(str(i)+' is even')\r\n\telse:\r\n\t\tprint(str(i)+' is odd')	jeśli warunek nie jest spełniony uruchamia blok instrukcji	if the condition is not met, it starts the instruction block	если условие не выполняется, запускается блок инструкций
list.append	a=[]\r\na.append(2)\r\nprint(a)\r\na.append(4)\r\nprint(a)	dodaje element do listy	adds an item to the list	добавляет элемент в список
list.insert	a=['one','three']\r\nprint(a)\r\na.insert(1,'two')\r\nprint(a)	Wstawia do listy element w danym miejscu	Inserts an element in the list in a given place	Вставляет элемент в список в заданном месте
del	a=['one','two','three']\r\nprint(a)\r\ndel a[1]\r\nprint(a)\r\n\r\n\r\nt=[2,3,5,7]\r\nprint(t)\r\ndel t[:]\r\nprint(t)	usuwa elementy z listy o wybranych indeksach	removes items from the list of selected indexes	удаляет элементы из списка с выбранными индексами
list.remove	a=['one','two','three']\r\nprint(a)\r\na.remove("one")\r\nprint(a)	usuwa element z listy	removes an item from the list	удаляет элемент из списка
len	a=['one','two','three']\r\nprint(len(a))	długość listy	list length	длина списка
random.randint	for i in range(10):\r\n\tprint(random.randint(1,3))	losuje liczbę z zakresu	draws a number from the range	рисует число из диапазона
math.sin	print(math.sin(1))	sinus z zadanej liczby	sine of a given number	синус заданного числа
math.cos	print(math.cos(1))	cosinus z zadanej liczby	cosine from a given number	косинус заданного числа
math.pi	print(math.pi)	liczba pi	PI number	число пи
math.pow	print(math.pow(2,3))	potęga liczby	power of number	мощность количество
math.sqrt	print(math.sqrt(2))\r\nprint(math.sqrt(3))\r\nprint(math.sqrt(4))	Pierwiastek kwadratowy z zadanej liczby	Square root of a given number	Квадратный корень из указанного числа
message.show	my_message = message.show('Write a message')\r\nprint(my_message)	wyświetla wiadomość i pobiera wpisane dane	displays the message and retrieves the entered data	выводит сообщение и извлекает введенные данные
vector.angle	print(Vector(10,10).angle)	pobiera kąt wektora w stopniach	gets the vector angle in degrees	возвращает вектор угла в градусах
vector.length	print(Vector(10,10).length)	pobiera długość wektora	gets the length of the vector	возвращает длину вектора
sprite.move	arrow.move(40)	przesuwa duszka o określoną odległość	moves the sprite a certain distance	перемещает спрайт на определенное расстояние
sprite.angle	arrow.move(30)\r\narrow.angle=90\r\narrow.move(30)\r\narrow.angle=180\r\narrow.move(30)	ustawia kąt duszka w stopniach	sets the angle of the sprite in degrees	устанавливает угол спрайта в градусах
sprite.image	sprite=Sprite()\r\nsprite.image=0\r\nsprite.image=1\r\nsprite.image=2	ustawia numer obrazka na duszku	sets the image number on the ghost	устанавливает номер изображения на спрайте
sprite.flip	sprite=Sprite()\r\nsprite.flip = True\r\nsprite.flip = False\r\nsprite.flip = True\r\nsprite.flip = False	odbicie lustrzane duszka	mirror reflection sprite	зеркальное отображение спрайта
sprite.size	sprite=Sprite()\r\nsprite.size=50\r\nsprite.size=5\r\nfor i in range(100):\r\nsprite.size+=1\t	ustawia wielkość duszka	sets the size of the sprite	устанавливает размер спрайта
sprite.color	sprite=Sprite()\r\nsprite.color=Color(255,0,0)\r\nsprite.color=Color(0,255,0)	ustawia kolor duszka	sets the color of the sprite	устанавливает цвет спрайта
sprite.pen.on	for i in range(10):\r\narrow.pen.on = True\r\narrow.move(5)\r\narrow.pen.on = False\r\narrow.move(5)	włącza bądź wyłącza pisak w duszku	turns the pen on or off in the ghost	включает или отключает перо в спрайте
sprite.pen.size	for i in range(10):\r\n\tarrow.pen.size=i\r\n\tarrow.move(10)	ustawia wielkość pisaka w duszku	sets the size of the pen in the goblet	устанавливает размер пера в спрайте
sprite.pen.color	arrow.pen.color=Color(255,0,0)\r\narrow.move(20)\r\narrow.pen.color=Color(0,255,0)\r\narrow.move(20)\r\narrow.pen.color=Color(0,0,255)\r\narrow.move(20)	ustawia kolor pisaka w duszku	sets the color of the pen in the goblet	устанавливает цвет пера в спрайте
sprite.position	arrow.position = Vector(50,50)\r\narrow.position = Vector(0,50)\r\narrow.position = Vector(0,0)	ustawia pozycję duszka	sets the position of the sprite	устанавливает позицию спрайта
sprite.position.x	for i in range(10):\r\n\tarrow.position.x+=10	współrzędna x pozycji duszka	coordinate x the position of the sprite	х координата позиции спрайта
sprite.position.y	for i in range(10):\r\n\tarrow.position.x=i*10\r\n\tarrow.position.y=i*10	współrzędna y pozycji duszka	coordinate y the position of the sprite	у координата позиции спрайта
game.add	sprite = Sprite()\r\ngame.add(sprite)	dodaje duszka do gry	adds the goblet to the game	добавляет кубок в игру
game.remove	sprite = Sprite()\r\ngame.add(sprite)\r\ngame.remove(sprite)	usuwa duszka z gry	removes the goblet from the game	удаляет кубок из игры
game.background	game.background=Color(255,0,0)\r\ngame.background=Color(0,255,0)	ustawia kolor tła	sets the background color	устанавливает цвет фона
game.start	class Rabbit(Sprite):\r\n\tdef update(self):\r\n\t\tself.angle+=10\r\n\r\n\r\ngame.add(Rabbit())\r\ngame.start()	uruchamia grę poprzez cykliczne wykonywanie metody update na wszystkich duszkach	runs the game by cyclically running the update method on all sprites	запускает игру циклическим запуском метода обновления на всех спрайтах
__init__	class Rabbit(Sprite):\r\n\tdef __init__(self):\r\n\t\tself.image=0\r\n\t\tself.color=Color(255,0,0)\r\ngame.add(Rabbit())\r\ngame.start()	metoda uruchamiająca się podczas dodawania duszka do gry	method that starts when adding a sprite to the game	метод, который запускается при добавлении спрайта в игру
update	class Rabbit(Sprite):\r\n\tdef update(self):\r\n\t\tself.move(3)\r\n\t\tself.angle+=5\r\n\r\n\r\ngame.add(Rabbit())\r\ngame.start()	metoda duszka uruchamiająca się cyklicznie po starcie gry.	a sprite method that starts cyclically after the game starts.	метод спрайта, который запускается циклически после запуска игры.
game.key	class Rabbit(Sprite):\r\n\tdef update(self):\r\n\t\tif game.key('left'):\r\n\t\t\tself.position.x-=10\r\n\t\tif game.key('right'):\r\n\t\t\tself.position.x+=10\r\ngame.add(Rabbit())\r\ngame.start()	sprawdza czy dany klawisz jest wciśnięty	checks if the key is pressed	проверяет, нажата ли клавиша
game.mouse	class Rabbit(Sprite):\r\n\tdef update(self):\r\n\t\tself.position = game.mouse.position\r\n\t\tself.pen.on = game.mouse.pressed\r\ngame.add(Rabbit())\r\ngame.start()	klasa zawierająca pozycję myszy i stan przycisku	class containing the mouse position and button state	класс, содержащий положение мыши и состояние кнопки
sprite.collide	class Rabbit(Sprite):\r\n\tdef update(self):\r\n\t\tself.move(2)\r\n\t\tif self.collide(carrot):\r\n\t\t\tgame.remove(carrot)\r\n\tdef __init__(self):\r\n\t\tself.position=Vector(-80,0)\r\n\r\n\r\nclass Carrot(Sprite):\r\n\tdef __init__(self):\r\n\t\tself.image=34\r\n\t\tself.position=Vector(90,0)\r\n\r\n\r\ngame.add(Rabbit())\r\ncarrot=Carrot()\r\ngame.add(carrot)\r\ngame.start()	metoda sprawdzająca czy dany duszek styka się z innym.	a method to check if a given gander is in contact with another.	метод, который проверяет, находится ли спрайт в контакте с другим.
sprite.collide(sprites)	class Rabbit(Sprite):\r\n\tdef __init__(self,y):\r\n\t\tself.speed = random.randint(1,8)\r\n\t\tself.size = 20\r\n\t\tself.position = Vector(-80,y)\r\n\tdef update(self):\r\n\t\tself.move(self.speed)\r\nclass Carrot(Sprite):\r\n\tdef __init__(self,y):\r\n\t\tself.size = 20\r\n\t\tself.image = 34\r\n\t\tself.position = Vector(80,y)\r\n\tdef update(self):\r\n\t\tif(self.collide(rabbits)):\r\n\t\t\tgame.remove(self)\r\nrabbits = []\r\nfor i in range (-60,80,20):\r\n\trabbit = Rabbit(i)\r\n\trabbits.append(rabbit)\r\n\tgame.add(rabbit)\r\n\tgame.add(Carrot(i))\r\ngame.start()	metoda sprawdza, czy dany duszek spotyka się z którymś z listy	the method checks if the ghost meets one of the list	метод проверяет, соответствует ли спрайт любому из списков